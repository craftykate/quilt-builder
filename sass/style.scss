@import 'reset'; //Resets styles to be uniform across browsers


//*============MIXINS============*/
	//Rounds corners individually. Default set.
	//ex: @include rounded; for default
	//or ex: @include rounded(10px, 10px, 0, 0); for rounded top
	@mixin rounded($tlcurve: 10px, $trcurve: 10px, $brcurve: 10px, $blcurve: 10px) {
		-webkit-border-top-left-radius: $tlcurve;
		border-top-left-radius: $tlcurve;
		-o-border-top-left-radius: $tlcurve;
		-ms-border-top-left-radius: $tlcurve;
		-moz-border-radius-topleft: $tlcurve;
		-webkit-border-top-right-radius: $trcurve;
		border-top-right-radius: $trcurve;
		-o-border-top-right-radius: $trcurve;
		-ms-border-top-right-radius: $trcurve;
		-moz-border-radius-topright: $trcurve;
		-webkit-border-bottom-right-radius: $brcurve;
		border-bottom-right-radius: $brcurve;
		-o-border-bottom-right-radius: $brcurve;
		-ms-border-bottom-right-radius: $brcurve;
		-moz-border-radius-bottomright: $brcurve;
		-webkit-border-bottom-left-radius: $blcurve;
		border-bottom-left-radius: $blcurve;
		-o-border-bottom-left-radius: $blcurve;
		-ms-border-bottom-left-radius: $blcurve;
		-moz-border-radius-bottomleft: $blcurve;
	}
	
	//Rounds all corners the same. Default set.
	//ex: @include round; for default
	//or ex: @include round(20px);
	@mixin round($curve: 10px) {
		-webkit-border-radius: $curve;
		border-radius: $curve;
		-o-border-radius: $curve;
		-ms-border-radius: $curve;
		-moz-border-radius: $curve;
	}
	
	//Applies boxshodow to element. Default set.
	//ex: @include boxshadow; for default
	//ex: @include boxshadow(.30, 0px, 0px, 7px, 1px); to set each variable
	@mixin boxshadow ($trans: .30, $horshad: 0px, $vershad: 0px, $blurshad: 7px, $spreadshad: 1px){
		-webkit-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-o-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-ms-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-moz-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
	}
	
	//This allows you to prepend or append content onto something
	//Example:
	//#play {
	//	@include addstuff(after, "p", "}");
	//	@include addstuff(before, "p", "{");
	//}
	//Will put "{" before and "}" after the p element in the div #play
	@mixin addstuff($befaft, $selector, $message) {
		#{$selector}:#{$befaft} {
			content: $message;
		}
	}

	//Create a shiny, round button
	@mixin shinybutton($textcolor: white, $buttoncolor: orange, $lightenby: 30%) {
		display:inline-block;
		@include round(16px);
		position:relative;
		font-size:1em;
		color:$textcolor;
		text-shadow:rgba(10, 10, 10, 0.496094) 1px 2px 1px;
		text-align:center;
		border:1px solid $buttoncolor;
		margin:0px 15px 0px 15px;
		padding:8px 30px 8px 30px;
		-webkit-box-shadow:rgba($buttoncolor, .4) 0px 10px 16px;
		box-shadow:rgba($buttoncolor, .4) 0px 10px 16px;
		-o-box-shadow:rgba($buttoncolor, .4) 0px 10px 16px;
		-ms-box-shadow:rgba($buttoncolor, .4) 0px 10px 16px;
		-moz-box-shadow:rgba($buttoncolor, .4) 0px 10px 16px;
		background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, lighten($buttoncolor, $lightenby)), color-stop(1, $buttoncolor) );
		background:-moz-linear-gradient( center top, lighten($buttoncolor, $lightenby) 5%, $buttoncolor 100% );
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='lighten($buttoncolor, $lightenby)', endColorstr='$buttoncolor');
		background-color:$buttoncolor;
		&:hover {
			background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, $buttoncolor), color-stop(1, lighten($buttoncolor, $lightenby)) );
			background:-moz-linear-gradient( center top, $buttoncolor 5%, lighten($buttoncolor, $lightenby) 100% );
			filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='$buttoncolor', endColorstr='lighten($buttoncolor, $lightenby)');
			background-color:lighten($buttoncolor, $lightenby);
		}
	}
	
	//Set up fluid grid system
	//ex: @include grid-unit(3); for 3 columns wide
	$column-width: percentage(60px/980px);
	$gutter-width: percentage(20px/980px);
	@mixin grid-unit($span, $lmargin: 0, $rmargin: 0) {
		width: ($column-width * $span) + ($gutter-width * ($span - 1));
		margin-left: $lmargin;
		margin-right: $rmargin;
	}
//*============END MIXINS============*/


//*============DEFINE COLORS============*/

	$text: #545252;
	$color0: #BF450E; //orange
	$color1: #571F48; //dark purple
	$color2: #AA5B12; //light orange
	$color3: #FFC923; //yellow
	$color4: #1F645B; //blue
	$color5: #60456A; //light purple
	$color6: #14B570; //teal
	$color7: #BECB37; //light green
	$color8: #708428; //dark green
//*============END DEFINE COLORS============*/


//*============TEXT STYLING============*/
	//Sets text by type
	//ex: @include setfont(menu); for menu text
	//MUST add each font to head.php like this: 
	//		<!--Quicksand - text-->
	//		<link href='http://fonts.googleapis.com/css?family=Quicksand:400,700' rel='stylesheet' type='text/css'>
	@mixin setfont($type) {
		//Headline
		@if $type == headline {
			font: {
				family: 'Raleway', sans-serif;
			}
		}
		@if $type == text {
			font: {
				family: 'Quicksand', sans-serif;
			}
		}
		@if $type == menu {
			font: {
				family: 'Josefin Sans', sans-serif;
			}
		}
	}	

	body {
		@include setfont(text);
		font-size: 1em;
		color: $text;
	}	

	ul, p {
		line-height:150%;
		text-align:justify;
	}	

	p {
		margin-bottom: 1em;
	}	

	a, a:visited {
		&:hover, &:focus, &:active {
		}
	}	

	i, em {
		font-style:italic;
	}	

	strong {
		font-weight:bold;
	}	

	.oops {
		color: red; 
	}
//*============END TEXT STYLING============*/


//*============MAIN PAGE ELEMENTS============*/
	body {
		position:relative; 
		margin: 10px auto;
		width: 980px;
	}	

	#wrapper {
		background-color: white;
		@include grid-unit(10);
		margin: 0 auto;
		@include round(20px);
		@include boxshadow;
	}	

	.clear {
		clear:both;
	}
//*============END MAIN PAGE ELEMENTS============*/

//*============HEADER============*/
	#header {
		margin-bottom: 30px;
		h1 {
			font-size: 3em;
			padding: 10px;
			color: $color0;
		}
		h2 {
			font-size: 1.5em;
			padding: 2px 10px;
			&:nth-child(2) {
				color: $color1;
			}
			&:nth-child(3) {
				color: $color2;
			}
			&:nth-child(4) {
				color: $color3;
			}
			&:nth-child(5) {
				color: $color4;
			}
		}
	}
//*============END HEADER============*/

//*============CONTENT============*/
	#content {
		.quilt {
			background-color: white;
			width: 59%;
			text-align: center;
			margin-left: 20.5%;
			table {
				width: 100%;
				td {
					padding-top: 7px;
					padding-bottom: 7px;
					&.color0 {
						background-color: $color0;
						color: darken($color0, 10%);
					}
					&.color1 {
						background-color: $color1;
						color: darken($color1, 10%);
					}
					&.color2 {
						background-color: $color2;
						color: darken($color2, 10%);
					}
					&.color3 {
						background-color: $color3;
						color: darken($color3, 10%);
					}
					&.color4 {
						background-color: $color4;
						color: darken($color4, 10%);
					}
					&.color5 {
						background-color: $color5;
						color: darken($color5, 10%);
					}
					&.color6 {
						background-color: $color6;
						color: darken($color6, 10%);
					}
					&.color7 {
						background-color: $color7;
						color: darken($color7, 10%);
					}
					&.color8 {
						background-color: $color8;
						color: darken($color8, 10%);
					}
					&.white {
						background-color: white;
					}
				}
			}
		}
		.stats {
			width: 13%;
			float: left;
			padding: 0 10px;
			margin-left: 20px;
			h1 {
				font-size: 1.3em;
				margin-bottom: 10px;
				color: $color5;
			}
			p {
				color: $color6;
				line-height: 1.4em;
			}
		}
		.instructions {
			width: 59%;
			margin: 0 auto;
			margin-top: 20px;
			padding: 10px;
			clear: both;
			h1 {
				font-size: 1.3em;
				margin-bottom: 10px;
				color: $color7;
			}
			p {
				color: $color8;
				line-height: 1.3em;
				margin-bottom: 1.2em;
			}
		}
	}
//*============END CONTENT============*/

//*============FOOTER============*/
	#footer {
		padding:10px;
		clear:both;
		ul {
			text-align: center;
		}
		li {
			display:inline;
			color: $color2;
		}
		a, a:visited {
			color: $color0;
			&:hover, &:focus, &:active { 
				color: $color1;
			}
		}
	}
//*============END FOOTER============*/

//*============RESPONSIVE DESIGN CHANGES============*/

	//*----------max-width XXXXpx----------*/
//*============END RESPONSIVE DESIGN CHANGES============*/
